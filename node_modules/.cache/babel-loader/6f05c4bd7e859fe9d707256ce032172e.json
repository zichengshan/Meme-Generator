{"ast":null,"code":"var _jsxFileName = \"/Users/zicheng.s/Documents/UC Irvine Info/Github/Meme-Generator/src/components/Meme.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n\n  const [meme, setMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"http://i.imgflip.com/1bij.jpg\"\n  });\n  const [allMemes, setAllMeme] = React.useState([]); // fetch info from API\n\n  React.useEffect(() => {\n    fetch(`https://api.imgflip.com/get_memes`).then(res => res.json()).then(data => setAllMeme(data.data.memes));\n  }, []); // Using an async function inside useEffect\n  // React.useEffect(() => {\n  //     async function getMemes() {\n  //         const res = await fetch(\"https://api.imgflip.com/get_memes\")\n  //         const data = await res.json()\n  //         setAllMemes(data.data.memes)\n  //     }\n  //     getMemes()\n  // }, [])\n\n  function getMemeImage() {\n    const randomNumber = Math.floor(Math.random() * allMemes.length);\n    const url = allMemes[randomNumber].url;\n    setMeme(prevMeme => ({ ...prevMeme,\n      randomImage: url\n    }));\n  }\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setMeme(prevMeme => {\n      return { ...prevMeme,\n        [name]: value\n      };\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Top text\",\n        className: \"form--input\",\n        name: \"topText\",\n        onChange: handleChange,\n        value: meme.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Bottom Text\",\n        className: \"form--input\",\n        name: \"bottomText\",\n        onChange: handleChange,\n        value: meme.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getMemeImage,\n        className: \"form--button\",\n        children: \"Get a new meme image \\u26F0\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme.randomImage,\n        alt: \"pic\",\n        className: \"meme--image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text top\",\n        children: meme.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text bottom\",\n        children: meme.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Meme, \"evjSEZVfJXb720eQUlz+X8Io0go=\");\n\n_c = Meme;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"sources":["/Users/zicheng.s/Documents/UC Irvine Info/Github/Meme-Generator/src/components/Meme.js"],"names":["React","Meme","meme","setMeme","useState","topText","bottomText","randomImage","allMemes","setAllMeme","useEffect","fetch","then","res","json","data","memes","getMemeImage","randomNumber","Math","floor","random","length","url","prevMeme","handleChange","event","name","value","target"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,KAAK,CAACI,QAAN,CAAe;AACnCC,IAAAA,OAAO,EAAE,EAD0B;AAEnCC,IAAAA,UAAU,EAAE,EAFuB;AAGnCC,IAAAA,WAAW,EAAE;AAHsB,GAAf,CAAxB;AAMA,QAAM,CAACC,QAAD,EAAWC,UAAX,IAAyBT,KAAK,CAACI,QAAN,CAAe,EAAf,CAA/B,CAP2B,CAS3B;;AACAJ,EAAAA,KAAK,CAACU,SAAN,CAAgB,MAAM;AAClBC,IAAAA,KAAK,CAAE,mCAAF,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAIN,UAAU,CAACM,IAAI,CAACA,IAAL,CAAUC,KAAX,CAF5B;AAGH,GAJD,EAIG,EAJH,EAV2B,CAgB3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAASC,YAAT,GAAwB;AACpB,UAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBb,QAAQ,CAACc,MAApC,CAArB;AACA,UAAMC,GAAG,GAAGf,QAAQ,CAACU,YAAD,CAAR,CAAuBK,GAAnC;AACApB,IAAAA,OAAO,CAACqB,QAAQ,KAAK,EACjB,GAAGA,QADc;AAEjBjB,MAAAA,WAAW,EAAEgB;AAFI,KAAL,CAAT,CAAP;AAIH;;AAED,WAASE,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,KAAK,CAACG,MAA5B;AACA1B,IAAAA,OAAO,CAACqB,QAAQ,IAAI;AAChB,aAAO,EACH,GAAGA,QADA;AAEH,SAACG,IAAD,GAAQC;AAFL,OAAP;AAIH,KALM,CAAP;AAMH;;AAED,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,UAFhB;AAGI,QAAA,SAAS,EAAC,aAHd;AAII,QAAA,IAAI,EAAC,SAJT;AAKI,QAAA,QAAQ,EAAEH,YALd;AAMI,QAAA,KAAK,EAAEvB,IAAI,CAACG;AANhB;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,aAFhB;AAGI,QAAA,SAAS,EAAC,aAHd;AAII,QAAA,IAAI,EAAC,YAJT;AAKI,QAAA,QAAQ,EAAEoB,YALd;AAMI,QAAA,KAAK,EAAEvB,IAAI,CAACI;AANhB;AAAA;AAAA;AAAA;AAAA,cATJ,eAiBI;AACI,QAAA,OAAO,EAAEW,YADb;AAEI,QAAA,SAAS,EAAC,cAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAyBI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAK,QAAA,GAAG,EAAEf,IAAI,CAACK,WAAf;AAA4B,QAAA,GAAG,EAAC,KAAhC;AAAsC,QAAA,SAAS,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA,kBAAgCL,IAAI,CAACG;AAArC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAI,QAAA,SAAS,EAAC,mBAAd;AAAA,kBAAmCH,IAAI,CAACI;AAAxC;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH;;GA9EuBL,I;;KAAAA,I","sourcesContent":["import React from \"react\";\n\nexport default function Meme() {\n    const [meme, setMeme] = React.useState({\n        topText: \"\",\n        bottomText: \"\",\n        randomImage: \"http://i.imgflip.com/1bij.jpg\"\n\n    })\n    const [allMemes, setAllMeme] = React.useState([])\n\n    // fetch info from API\n    React.useEffect(() => {\n        fetch(`https://api.imgflip.com/get_memes`)\n            .then(res => res.json())\n            .then(data => setAllMeme(data.data.memes))\n    }, [])\n\n    // Using an async function inside useEffect\n    // React.useEffect(() => {\n    //     async function getMemes() {\n    //         const res = await fetch(\"https://api.imgflip.com/get_memes\")\n    //         const data = await res.json()\n    //         setAllMemes(data.data.memes)\n    //     }\n    //     getMemes()\n    // }, [])\n\n    function getMemeImage() {\n        const randomNumber = Math.floor(Math.random() * allMemes.length)\n        const url = allMemes[randomNumber].url\n        setMeme(prevMeme => ({\n            ...prevMeme,\n            randomImage: url\n        }))\n    }\n\n    function handleChange(event) {\n        const {name, value} = event.target\n        setMeme(prevMeme => {\n            return {\n                ...prevMeme,\n                [name]: value\n            }\n        })\n    }\n\n    return (\n        <main>\n            <div className=\"form\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Top text\"\n                    className=\"form--input\"\n                    name=\"topText\"\n                    onChange={handleChange}\n                    value={meme.topText}\n                />\n                <input\n                    type=\"text\"\n                    placeholder=\"Bottom Text\"\n                    className=\"form--input\"\n                    name=\"bottomText\"\n                    onChange={handleChange}\n                    value={meme.bottomText}\n                />\n                <button\n                    onClick={getMemeImage}\n                    className=\"form--button\"\n                >\n                    Get a new meme image ⛰️\n                </button>\n            </div>\n            <div className=\"meme\">\n                <img src={meme.randomImage} alt=\"pic\" className=\"meme--image\"/>\n                <h2 className=\"meme--text top\">{meme.topText}</h2>\n                <h2 className=\"meme--text bottom\">{meme.bottomText}</h2>\n            </div>\n        </main>\n    )\n}"]},"metadata":{},"sourceType":"module"}